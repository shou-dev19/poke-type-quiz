name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript type check
      run: npm run type-check
      
    - name: Run lint
      run: npm run lint
      
    # Temporarily disabled unit tests due to configuration issues
    # - name: Run unit tests
    #   run: npm run test
    #   
    # - name: Upload test coverage
    #   uses: codecov/codecov-action@v3
    #   with:
    #     file: ./coverage/lcov.info
    #     flags: unittests
    #     name: codecov-umbrella
        
  # Temporarily disabled E2E tests
  # e2e-test:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 20
  #       cache: 'npm'
  #       
  #   - name: Install dependencies
  #     run: npm ci
  #     
  #   - name: Install Playwright browsers
  #     run: npx playwright install --with-deps
  #     
  #   - name: Build application
  #     run: npm run build
  #     
  #   - name: Run E2E tests
  #     run: npm run test:e2e
  #     
  #   - name: Upload Playwright report
  #     uses: actions/upload-artifact@v3
  #     if: always()
  #     with:
  #       name: playwright-report
  #       path: playwright-report/
  #       retention-days: 30
        
  build:
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
        retention-days: 30
        
  lighthouse:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Serve built app
      run: |
        npm install -g serve
        serve -s dist -p 3000 &
        sleep 5
        
    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        
  deploy:
    runs-on: ubuntu-latest
    needs: [test, e2e-test, build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        # cname: pokemon-quiz.example.com # カスタムドメイン使用時に有効化